name: Frontend PCS Build and Push Docker Image

on:
  push:
    branches:
      - 'pcs_release'
    paths:
      - 'src/gurubase-frontend/**'
      - .github/workflows/frontend-pcs-docker-image-dockerhub.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/gurubase-frontend

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Configure Dockerhub credentials
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v8

    - name: Set image tag and Dockerfile
      id: set-vars
      run: |
        branch=$(echo ${{ steps.branch-name.outputs.current_branch }} | tr '/' '-')
        commit_sha=${GITHUB_SHA::7}
        echo "image_tag=${branch}-${commit_sha}" >> $GITHUB_OUTPUT
        echo "branch_tag=${branch}" >> $GITHUB_OUTPUT
        echo "dockerfile=src/gurubase-frontend/Dockerfile.selfhosted" >> $GITHUB_OUTPUT

    - name: Build and push
      uses: docker/build-push-action@v4
      env:
        REPOSITORY: ${{ secrets.GURUBASE_FE_PCS_DOCKER_REPOSITORY }}
      with:
        context: src/gurubase-frontend
        push: true
        tags: |
          ${{ env.REPOSITORY }}:${{ steps.set-vars.outputs.image_tag }}
          ${{ env.REPOSITORY }}:${{ steps.set-vars.outputs.branch_tag }}
        platforms: linux/amd64, linux/arm64
        file: ${{ steps.set-vars.outputs.dockerfile }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Image Tags and Dockerfile
      run: |
        echo "Commit Tag: ${{ steps.set-vars.outputs.image_tag }}"
        echo "Branch Tag: ${{ steps.set-vars.outputs.branch_tag }}"
        echo "Dockerfile: ${{ steps.set-vars.outputs.dockerfile }}"
        echo "Commit Tag: ${{ steps.set-vars.outputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
        echo "Branch Tag: ${{ steps.set-vars.outputs.branch_tag }}" >> $GITHUB_STEP_SUMMARY
        echo "Dockerfile: ${{ steps.set-vars.outputs.dockerfile }}" >> $GITHUB_STEP_SUMMARY
